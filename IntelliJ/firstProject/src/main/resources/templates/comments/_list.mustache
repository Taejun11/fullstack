<div id="comment-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
<!--                수정 버튼-->
                <button type="button" class="btn btn-sm btn-outline-primary"
                data-bs-toggle="modal" data-bs-target="#comment-edit-modal"
                data-bs-id="{{id}}" data-bs-body="{{body}}" data-bs-nickname="{{nickname}}"
                data-bs-article_id="{{articleId}}">수정</button>
                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- 수정 모달 창 -->
<div class="modal fade" tabindex="-1" id="comment-edit-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
<!--                댓글 수정 폼 추가-->
                <form>
                    <div class="mb-3">
                        <div class="form-label">닉네임</div>
                        <input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>

                    <div>
                        <div class="form-label">댓글 내용</div>
                        <textarea id="edit-comment-body" rows="3" class="form-control form-control-sm"></textarea>
                    </div>

                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <button type="button" class="btn btn-outline-primary btn-sm"
                            id="comment-update-btn">수정완료</button>
                </form>
            </div>
<!--            <div class="modal-footer">-->
<!--                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>-->
<!--                <button type="button" class="btn btn-primary">Save changes</button>-->
<!--            </div>-->
        </div>
    </div>
</div>

<!--모달 이벤트 쿼리-->
<script>
    {
        const commentEditModal = document.getElementById("comment-edit-modal");
        if (commentEditModal) {
          commentEditModal.addEventListener('show.bs.modal', event => {
<!--        트리거 버튼 선택-->
            const triggerBtn = event.relatedTarget;
<!--        데이터 가져오기-->
            const id = triggerBtn.getAttribute("data-bs-id");
            const body = triggerBtn.getAttribute("data-bs-body");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");
            const article_id = triggerBtn.getAttribute("data-bs-article_id");

            console.log(`${id}, ${body}, ${nickname}, ${article_id}`);
<!--        데이터 변경-->
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-article-id").value = article_id;

          });
        }
    }
<!--  구분선  -->
    {
<!--        댓글 수정 버튼 변수화-->
        const commentUpdateBtn = document.querySelector("#comment-update-btn");
<!--        댓글 클릭 이벤트 감지-->
        commentUpdateBtn.addEventListener("click", function(){

<!--        수정 댓글 객체 생성-->
            const comment = {
                id : document.querySelector("#edit-comment-id").value,
                nickname : document.querySelector("#edit-comment-nickname").value,
                body : document.querySelector("#edit-comment-body").value,
                article_id : document.querySelector("#edit-comment-article-id").value
            };

<!--        fetch()-비동기 통신을 위한 api -->
            const url = "/api/comments/" + comment.id;
            fetch(url, {
                method: "PATCH",
                body: JSON.stringify(comment),
                headers: {
                    "Content-Type" : "application/json"
                }
            }).then(response => {
<!--           http 응답코드에 따른 메시지 출력-->
               const msg = (response.ok) ? "댓글 수정 성공" : "댓글 수정 실패";
               alert(msg);
<!--           현재페이지 새로고침-->
               window.location.reload();
            });
        });
    }
</script>

<script>
<!--    댓글 삭제-->
    {
<!--    삭제 버튼 선택-->
        const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
        commentDeleteBtns.forEach(btn => {
<!--        각 버튼의 이벤트 처리로 등록-->
            btn.addEventListener("click", (event) => {
<!--            이벤트 발생요소-->
                const commentDeleteBtn = event.target;
<!--            삭제댓글 아이디 가져오기-->
                const commentId = commentDeleteBtn.getAttribute("data-comment-id");

<!--            삭제 api 호출 및 처리-->
    <!--        fetch()-비동기 통신을 위한 api -->
                const url = `/api/comments/${commentId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response => {
    <!--           http 응답코드에 따른 메시지 출력-->
                   if(!response.ok){
                       alert("댓글 삭제 실패");
                   }
<!--               삭제 성공 시 화면에서 댓글 지움   -->
                   const target = document.querySelector(`#comments-${commentId}`);
                   target.remove();
    <!--           현재페이지 새로고침-->
                   window.location.reload();
                });
            });
        });
    }
</script>